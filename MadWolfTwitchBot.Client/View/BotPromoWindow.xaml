<Window x:Class="MadWolfTwitchBot.Client.View.BotPromoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MadWolfTwitchBot.Client.ViewModel"
        xmlns:input="clr-namespace:Microsoft.Toolkit.Mvvm.Wpf.Input"
        mc:Ignorable="d"
        Title="BotPromoWindow"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize">

    <Window.DataContext>
        <local:BotPromoViewModel />
    </Window.DataContext>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <DataGrid Grid.ColumnSpan="2"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  CanUserSortColumns="False"
                  Width="650"
                  Height="150"
                  ItemsSource="{Binding BotPromoMessages}">
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="..."
                                Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                CommandParameter="{Binding Data}"
                                input:RelayCommandExtensions.IsCommandUpdateEnabled="True" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Width="*" Header="Message" Binding="{Binding Data.ResponseMessage}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Button Grid.Row="1" Width="125" Content="Clear Selection"
                input:RelayCommandExtensions.IsCommandUpdateEnabled="True" />

        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Width="125" Content="Add" Command="{Binding AddCommand}"
                    input:RelayCommandExtensions.IsCommandUpdateEnabled="True"/>
            <Button Width="125" Content="Remove" Command="{Binding DeleteCommand}"
                    input:RelayCommandExtensions.IsCommandUpdateEnabled="True" />
        </StackPanel>
    </Grid>
</Window>
